<UserControl x:Class="RoixApp.Wpf.SelectLine"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=System.Runtime"
             xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
             xmlns:local="clr-namespace:RoixApp.Wpf"
             xmlns:conv="clr-namespace:RoixApp.Wpf.Converters"
             xmlns:action="clr-namespace:RoixApp.Wpf.Actions"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <local:SelectLineViewModel />
    </UserControl.DataContext>

    <DockPanel ClipToBounds="True" Margin="10,5" Background="Gray" >
        <StackPanel DockPanel.Dock="Left" Margin="5" >
            <Panel.Resources>
                <Style TargetType="{x:Type DockPanel}" >
                    <Setter Property="Margin" Value="10,5,0,5" />
                </Style>
                <Style TargetType="{x:Type TextBlock}" >
                    <Setter Property="Margin" Value="0,0,10,0" />
                    <Setter Property="DockPanel.Dock" Value="Left" />
                </Style>
                <Style TargetType="{x:Type TextBox}" >
                    <Setter Property="Width" Value="60" />
                    <Setter Property="TextAlignment" Value="Right" />
                    <Setter Property="MaxLength" Value="6" />
                    <Setter Property="DockPanel.Dock" Value="Right" />
                </Style>
            </Panel.Resources>
            
            <TextBlock Margin="5,10" Text="Left: Line Pixel" />
            <DockPanel>
                <TextBlock Text="X1" />
                <TextBox Text="{Binding RectRatioX1.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border/>
            </DockPanel>
            <DockPanel>
                <TextBlock Text="Y1" />
                <TextBox Text="{Binding RectRatioY1.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border/>
            </DockPanel>
            <DockPanel>
                <TextBlock Text="X2" />
                <TextBox Text="{Binding RectRatioX2.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border/>
            </DockPanel>
            <DockPanel>
                <TextBlock Text="Y2" />
                <TextBox Text="{Binding RectRatioY2.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border/>
            </DockPanel>
        </StackPanel>

        <Grid>
            <Image x:Name="mainImage" Source="{Binding MyImage, Mode=OneTime}"
                   RenderOptions.BitmapScalingMode="NearestNeighbor" >
                <i:Interaction.Triggers>
                    <!-- Get Mouse -->
                    <i:EventTrigger EventName="MouseLeftButtonDown" >
                        <action:CaptureMousePointAction MousePoint="{Binding MouseLeftDownPoint.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp" >
                        <action:CaptureMousePointAction MousePoint="{Binding MouseLeftUpPoint.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove" >
                        <action:CaptureMousePointAction MousePoint="{Binding MouseMovePoint.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>

                    <!-- Get size of Image control -->
                    <i:EventTrigger EventName="Loaded" >
                        <action:EventToSizeAction ControlSize="{Binding ViewBorderSize.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="SizeChanged" >
                        <action:EventToSizeAction ControlSize="{Binding ViewBorderSize.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>

            <Grid Width="{Binding ActualWidth, ElementName=mainImage}"
                  Height="{Binding ActualHeight, ElementName=mainImage}" >
                <Panel.Resources>
                    <Style TargetType="{x:Type Line}" >
                        <Setter Property="Stroke" Value="Lime" />
                        <Setter Property="StrokeThickness" Value="2" />
                        <Setter Property="IsHitTestVisible" Value="False" />
                    </Style>
                    <sys:Double x:Key="ArrowAngle1">35</sys:Double>
                    <sys:Double x:Key="ArrowAngle2">-35</sys:Double>
                </Panel.Resources>
                <Line>
                    <i:Interaction.Triggers>
                        <i:PropertyChangedTrigger Binding="{Binding SelectedLine.Value, Mode=OneWay}">
                            <action:SetRoixLineToLineAction />
                        </i:PropertyChangedTrigger>
                    </i:Interaction.Triggers>
                </Line>
                
                <!-- Arrows -->
                <Line>
                    <i:Interaction.Triggers>
                        <i:PropertyChangedTrigger Binding="{Binding SelectedLine.Value, Mode=OneWay}">
                            <action:SetArrowLineAction ArrowAngleMin="{StaticResource ArrowAngle1}" />
                        </i:PropertyChangedTrigger>
                    </i:Interaction.Triggers>
                </Line>
                <Line>
                    <i:Interaction.Triggers>
                        <i:PropertyChangedTrigger Binding="{Binding SelectedLine.Value, Mode=OneWay}">
                            <action:SetArrowLineAction ArrowAngleMin="{StaticResource ArrowAngle2}" />
                        </i:PropertyChangedTrigger>
                    </i:Interaction.Triggers>
                </Line>

            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
