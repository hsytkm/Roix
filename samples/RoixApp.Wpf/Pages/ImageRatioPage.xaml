<UserControl
    x:Class="RoixApp.Wpf.ImageRatioPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:action="clr-namespace:RoixApp.Wpf.Actions"
    xmlns:conv="clr-namespace:RoixApp.Wpf.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:RoixApp.Wpf"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rp="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.DataContext>
        <local:ImageRatioViewModel />
    </UserControl.DataContext>

    <DockPanel
        Margin="10,5"
        Background="Gray"
        ClipToBounds="True">
        <StackPanel
            Margin="5"
            DockPanel.Dock="Left">
            <Panel.Resources>
                <Style TargetType="{x:Type DockPanel}">
                    <Setter Property="Margin" Value="10,5,0,5" />
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Margin" Value="0,0,10,0" />
                    <Setter Property="DockPanel.Dock" Value="Left" />
                </Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Width" Value="60" />
                    <Setter Property="TextAlignment" Value="Right" />
                    <Setter Property="MaxLength" Value="6" />
                    <Setter Property="DockPanel.Dock" Value="Right" />
                </Style>
            </Panel.Resources>

            <TextBlock
                Margin="5,10"
                Text="Left: Rect Ratio (%)" />
            <DockPanel>
                <TextBlock Text="X" />
                <TextBox Text="{Binding RectRatioX.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border />
            </DockPanel>
            <DockPanel>
                <TextBlock Text="Y" />
                <TextBox Text="{Binding RectRatioY.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border />
            </DockPanel>
            <DockPanel>
                <TextBlock Text="W" />
                <TextBox Text="{Binding RectRatioWidth.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border />
            </DockPanel>
            <DockPanel>
                <TextBlock Text="H" />
                <TextBox Text="{Binding RectRatioHeight.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border />
            </DockPanel>

            <TextBlock
                Margin="5,30,5,10"
                Text="Right: Point Ratio (%)" />
            <DockPanel>
                <TextBlock Text="X" />
                <TextBox Text="{Binding PointRatioX.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border />
            </DockPanel>
            <DockPanel>
                <TextBlock Text="Y" />
                <TextBox Text="{Binding PointRatioY.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Border />
            </DockPanel>
        </StackPanel>

        <Grid>
            <Image
                x:Name="mainImage"
                Source="{Binding MyImage, Mode=OneTime}">
                <i:Interaction.Triggers>
                    <!--  Get Mouse  -->
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <action:CaptureMousePointAction MousePoint="{Binding MouseLeftDownPoint.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <action:CaptureMousePointAction MousePoint="{Binding MouseLeftUpPoint.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseRightButtonDown">
                        <action:CaptureMousePointAction MousePoint="{Binding MouseRightDownPoint.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseMove">
                        <action:CaptureMousePointAction MousePoint="{Binding MouseMovePoint.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>

                    <!--  Get size of Image control  -->
                    <i:EventTrigger EventName="Loaded">
                        <action:CaptureRoixSizeAction Size="{Binding ViewBorderSize.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="SizeChanged">
                        <action:CaptureRoixSizeAction Size="{Binding ViewBorderSize.Value, Mode=OneWayToSource}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>

            <Grid
                Width="{Binding ActualWidth, ElementName=mainImage}"
                Height="{Binding ActualHeight, ElementName=mainImage}">
                <Polygon
                    Points="{Binding PreviewRectangle.Value, Mode=OneWay, Converter={StaticResource RectToPointCollectionConverter}}"
                    Style="{StaticResource dashPolygonStyle}" />

                <Polygon
                    Points="{Binding SelectedRectangle.Value, Mode=OneWay, Converter={StaticResource RectToPointCollectionConverter}}"
                    Style="{StaticResource selectedPolygonStyle}" />

                <Polygon
                    Points="{Binding SelectedPoint.Value, Mode=OneWay, Converter={StaticResource PointToPointCollectionConverter}}"
                    Stroke="Cyan"
                    Style="{StaticResource selectedPolygonStyle}" />
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>
